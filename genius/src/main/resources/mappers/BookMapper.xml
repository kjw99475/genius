<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/schema/mybatis-3-mapper.dtd">
<mapper namespace="org.fullstack4.genius.mapper.BookMapper">
    <sql id="whereCondition">
        <where>
            <if test='search_word != null and search_word !=""'>
                <choose>
                    <when test="type == 0">
                        OR book_name LIKE CONCAT('%', #{search_word}, '%')
                        OR author LIKE CONCAT('%', #{search_word}, '%')
                        OR publisher LIKE CONCAT('%', #{search_word}, '%')
                        OR book_code LIKE CONCAT('%', #{search_word}, '%')
                    </when>
                    <when test="type == 1">
                        AND book_name LIKE CONCAT('%', #{search_word}, '%')
                    </when>
                    <when test="type == 2">
                        AND author LIKE CONCAT('%', #{search_word}, '%')
                    </when>
                    <when test="type == 3">
                        AND publisher LIKE CONCAT('%', #{search_word}, '%')
                    </when>
                    <when test="type == 4">
                        AND book_code LIKE CONCAT('%', #{search_word}, '%')
                    </when>
                </choose>
            </if>
            <if test='status != null and status !=0' >
                AND sales_status = #{status}
            </if>
            <if test='class_code != null and class_code !=""'>
                AND category_class_code = #{class_code}
            </if>
            <if test='subject_code != null and subject_code !=""'>
                AND category_subject_code = #{subject_code}
            </if>
            <if test="search_date1 != null or search_date2 != null">
                <if test="search_date1 != null">
                    AND publication_date <![CDATA[>=]]> #{search_date1}
                </if>
                <if test="search_date2 != null">
                    AND publication_date <![CDATA[<]]> #{search_date2} + INTERVAL 1 DAY
                </if>
            </if>

        </where>
    </sql>
    <insert id="regist">
        INSERT INTO tbl_book(book_code, book_name, author, price, discount_per, discount_price, quantity, category_class_code, category_subject_code, publisher
                            ,book_info, isbn, contents, publication_date,book_img,video)
        VALUES(#{book_code}, #{book_name}, #{author}, #{price}, #{discount_per}, #{discount_price}, #{quantity}, #{category_class_code}, #{category_subject_code}, #{publisher},
                            #{book_info}, #{isbn}, #{contents}, #{publication_date},#{book_img},#{video})
    </insert>

    <select id="listAll" resultType="org.fullstack4.genius.domain.BookVO">
        SELECT book_idx, book_code, book_name, author, price, quantity, category_class_code, category_subject_code, sales_start_date,
        sales_end_date, sales_status, book_img, publisher, discount_price, discount_per, rank_avg, video
        ,book_info, isbn, contents, publication_date, tcc.name AS class_name, tsc.name AS subject_name
        FROM tbl_book AS tb INNER JOIN tbl_class_category AS tcc
        ON tb.category_class_code = tcc.category_code
        INNER JOIN tbl_subject_category AS tsc
        ON tb.category_subject_code = tsc.category_code
        ORDER BY book_idx DESC
    </select>

    <select id="view" resultType="org.fullstack4.genius.domain.BookVO">
        SELECT book_idx, book_code, book_name, author, price, quantity, category_class_code, category_subject_code, sales_start_date,
        sales_end_date, sales_status, book_img, publisher, discount_price, discount_per, rank_avg, video,
        book_info, isbn, contents, publication_date, tcc.name AS class_name, tsc.name AS subject_name
        FROM tbl_book AS tb INNER JOIN tbl_class_category AS tcc
        ON tb.category_class_code = tcc.category_code
        INNER JOIN tbl_subject_category AS tsc
        ON tb.category_subject_code = tsc.category_code
        where book_code = #{book_code}
    </select>
    <delete id="delete">
        DELETE
        FROM tbl_book
        WHERE book_idx = #{idx}
    </delete>
    <update id="modify">
        UPDATE tbl_book SET
        book_name = #{book_name},
        author = #{author},
        quantity = #{quantity},
<!--        sales_start_date = #{sales_start_date},-->
<!--        sales_end_date = #{sales_end_date},-->
<!--        sales_status = #{sales_status},-->
        publisher = #{publisher},
        book_info = #{book_info},
        price = #{price},
        category_class_code = #{category_class_code},
        category_subject_code = #{category_subject_code},
        contents = #{contents},
        publication_date = #{publication_date},
        discount_per = #{discount_per},
        discount_price = #{discount_price},
        book_img = #{book_img},
        video = #{video}
        WHERE book_idx = #{book_idx}
    </update>
    <select id="BookTotalCount" resultType="int">
        SELECT COUNT(*) FROM tbl_book
        <include refid="whereCondition"></include>
    </select>

    <select id="BookListByPage" resultType="org.fullstack4.genius.domain.BookVO">
        SELECT book_idx, book_code, book_name, author, price, quantity, category_class_code, category_subject_code, sales_start_date,
        sales_end_date, sales_status, book_img, publisher, discount_price, discount_per, rank_avg, video,
        book_info, isbn, contents, publication_date, tcc.name AS class_name, tsc.name AS subject_name
        FROM tbl_book AS tb INNER JOIN tbl_class_category AS tcc
        ON tb.category_class_code = tcc.category_code
        INNER JOIN tbl_subject_category AS tsc
        ON tb.category_subject_code = tsc.category_code
        <include refid="whereCondition"></include>
        <if test='sort != null'>
            <choose>
                <when test="sort == 1">
                    ORDER BY publication_date DESC
                </when>
                <when test="sort == 2">
                    ORDER BY publication_date DESC
                </when>
                <when test="sort == 3">
                    ORDER BY discount_price ASC
                </when>
                <when test="sort == 4">
                    ORDER BY discount_price DESC
                </when>
            </choose>
        </if>
        LIMIT #{page_skip_count}, #{page_size}
    </select>
    <select id="bookSubjectCategoryList" resultType="java.util.HashMap">
        SELECT category_code, name
        FROM tbl_subject_category
    </select>

    <select id="bookClassCategoryList" resultType="java.util.HashMap">
        SELECT category_code, name
        FROM tbl_class_category
    </select>

    <update id="BookInventoryUpdate">
        UPDATE tbl_book
        SET sales_status = #{sales_status},sales_start_date=#{sales_start_date},sales_end_date=#{sales_end_date},quantity=#{quantity}
        where book_code = #{book_code}
    </update>

    <insert id="InsertRestore">
        INSERT INTO tbl_store(book_code,book_name,price,amount,store_date,category_class_code,category_subject_code)
        VALUES(#{book_code}
        ,#{book_name}
        ,#{price}
        ,#{amount}
        ,NOW()
        ,#{category_class_code}
        ,#{category_subject_code}
        )
    </insert>
</mapper>