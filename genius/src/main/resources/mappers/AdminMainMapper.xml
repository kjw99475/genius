<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/schema/mybatis-3-mapper.dtd">
<mapper namespace="org.fullstack4.genius.mapper.AdminMainMapper">
    <select id="todaySummary" resultType="org.fullstack4.genius.dto.StatisticsDTO">
        SELECT CASE WHEN SUM(amount) IS NULL THEN 0 ELSE SUM(amount) END AS todayOrderCnt
        , CASE WHEN SUM(amount * price) IS NULL THEN 0 ELSE SUM(amount * price) END AS todayOrderPrice
        , COUNT(DISTINCT TM.member_id) AS todayOrderMember
        FROM tbl_release AS TR
        INNER JOIN tbl_order AS TOR ON TR.order_num = TOR.order_num
        INNER JOIN tbl_member AS TM ON TOR.member_id = TM.member_id
        WHERE DATE(TR.release_date) = DATE(NOW())
    </select>
    <select id="totalSummary" resultType="org.fullstack4.genius.dto.StatisticsDTO">
        SELECT CASE WHEN SUM(amount) IS NULL THEN 0 ELSE SUM(amount) END AS totalOrderCnt
        , CASE WHEN SUM(amount * price) IS NULL THEN 0 ELSE SUM(amount * price) END AS totalOrderPrice
        , COUNT(DISTINCT TM.member_id) AS totalOrderMember
        FROM tbl_release AS TR
        INNER JOIN tbl_order AS TOR ON TR.order_num = TOR.order_num
        INNER JOIN tbl_member AS TM ON TOR.member_id = TM.member_id
    </select>
    <select id="todayClass" resultType="org.fullstack4.genius.dto.StatisticsDTO">
        SELECT  TC.category_code, TC.name AS category_name, CASE WHEN SUM(TR.amount * TR.price) IS NULL THEN 0 ELSE SUM(TR.amount * TR.price) END AS result
        FROM (
            SELECT category_class_code, release_date, amount, price FROM tbl_release WHERE DATE(release_date) = DATE(NOW())
        ) AS TR
        RIGHT OUTER JOIN tbl_class_category AS TC ON TR.category_class_code = TC.category_code
        GROUP BY TC.category_code
    </select>
    <select id="totalClass" resultType="org.fullstack4.genius.dto.StatisticsDTO">
        SELECT  TC.category_code, TC.name AS category_name, CASE WHEN SUM(TR.amount * TR.price) IS NULL THEN 0 ELSE SUM(TR.amount * TR.price) END AS result
        FROM tbl_release AS TR
        RIGHT OUTER JOIN tbl_class_category AS TC ON TR.category_class_code = TC.category_code
        GROUP BY TC.category_code
    </select>
    <select id="todaySubject" resultType="org.fullstack4.genius.dto.StatisticsDTO">
        SELECT  TS.category_code, TS.name AS category_name, CASE WHEN SUM(TR.amount * TR.price) IS NULL THEN 0 ELSE SUM(TR.amount * TR.price) END AS result
        FROM (
            SELECT category_subject_code, release_date, amount, price FROM tbl_release WHERE DATE(release_date) = DATE(NOW())
        ) AS TR
        RIGHT OUTER JOIN tbl_subject_category AS TS ON TR.category_subject_code = TS.category_code
        GROUP BY TS.category_code
    </select>
    <select id="totalSubject" resultType="org.fullstack4.genius.dto.StatisticsDTO">
        SELECT  TS.category_code, TS.name AS category_name, CASE WHEN SUM(TR.amount * TR.price) IS NULL THEN 0 ELSE SUM(TR.amount * TR.price) END AS result
        FROM tbl_release AS TR
        RIGHT OUTER JOIN tbl_subject_category AS TS ON TR.category_subject_code = TS.category_code
        GROUP BY TS.category_code
    </select>
    <select id="bestSeller" resultType="org.fullstack4.genius.domain.BookVO">
        SELECT TB.book_idx, TB.book_code, TB.book_name, TB.book_img
        , TB.category_class_code, TC.name AS 'class_name', TB.category_subject_code, TS.name AS 'subject_name'
        , TB.price, TB.discount_price, TB.sales_status, TB.rank_avg, TB.publication_date
        , SUM(TR.amount) AS sales_amount
        , SUM(TR.amount * TR.price) AS sales_price
        FROM tbl_book AS TB
        INNER JOIN tbl_release AS TR ON TB.book_code = TR.book_code
        INNER JOIN tbl_class_category AS TC ON TB.category_class_code = TC.category_code
        INNER JOIN tbl_subject_category AS TS ON TB.category_subject_code = TS.category_code
        GROUP BY TB.book_idx
        ORDER BY sales_amount DESC, publication_date DESC
        LIMIT 0,5
    </select>
    <select id="dayTotalRevenue" resultType="org.fullstack4.genius.dto.StatisticsDTO">
        SELECT `date` AS 'date', revenue_total AS 'totalRevenue'
        FROM tbl_revenue_statics
        WHERE `date` <![CDATA[>=]]> SUBDATE(DATE(NOW()), 30) AND `date` != DATE(NOW())
    </select>
    <select id="monthTotalRevenue" resultType="org.fullstack4.genius.dto.StatisticsDTO">
        SELECT to_char(`date`, 'YYYY-MM') AS 'date', SUM(revenue_total) AS 'totalRevenue'
        FROM tbl_revenue_statics
        WHERE to_char(`date`, 'YYYY-MM') <![CDATA[>=]]> to_char(date_sub(NOW(), INTERVAL 6 MONTH), 'YYYY-MM') AND to_char(`date`, 'YYYY-MM') != to_char(NOW(), 'YYYY-MM')
        GROUP BY to_char(`date`, 'YYYY-MM')
    </select>
    <select id="yearTotalRevenue" resultType="org.fullstack4.genius.dto.StatisticsDTO">
        SELECT to_char(`date`, 'YYYY') AS 'date', SUM(revenue_total) AS 'totalRevenue'
        FROM tbl_revenue_statics
        WHERE to_char(`date`, 'YYYY') <![CDATA[>=]]> to_char(date_sub(NOW(), INTERVAL 20 YEAR), 'YYYY') AND to_char(`date`, 'YYYY') != to_char(NOW(), 'YYYY')
        GROUP BY to_char(`date`, 'YYYY')
    </select>
</mapper>